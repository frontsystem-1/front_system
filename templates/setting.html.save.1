{% extends "layout.html" %}

{% block content %}
<div>
	<input id='resident_id' style="display: none;">
	<input id='room_number' style="display: none;">
	<input id='name' style="display: none;">
	<input type='number' id="number" style="display: none;">
	<input type='text' id="name" style="display: none;">
	<input type='text' id="status" value='一人外出可能' style="display: none;">
	<select id="move_select" style="display: none;">
		<option value="">選択して下さい</option>
        {% for resident in move_resident %}
                <option value="{{resident}}">{{resident[2]}}:{{resident[1]}}</option>
        {% endfor %}
        </select>
	<button id="submit" onclick="updateResident()" style="display: none;">登録</button>
	<button id="submit_move" onclick="moveResident()" style="display: none;">移動</button>	

	<button id="create" onclick="createView()" style="display: none;">新規登録</button>
	<button id="update_status" onclick="updateView()" style="display: none;">更新</button>
	<button id="move" onclick="moveView()" style="display: none;">部屋移動</button>
	<button id="disappear"  onclick="disappearResident()" style="display: none;">退去</button>
	
</div>
<div class="list_container">
            <div class="resident_row">
            {% for data_item in all_data[::-1] %}
            {% for value in data_item %}
                {% if value[1] == 'None' or value[6] == 'not_exist' %}
       		<button class="resident-btn resident-btn-none-value" onclick="selectResident('not_exist','{{value[0]}}','{{value[1]}}','{{value[2]}}','{{value[3]}}','{{value[4]}}')">0000 データ なし</button>
                {% else %}
                <button class="resident-btn" onclick="selectResident('exist','{{value[0]}}','{{value[1]}}','{{value[2]}}','{{value[3]}}','{{value[4]}}')">{{value[2]}} {{value[1]|replace('　', '<br>')}}様</button>
                {% endif %}
            {% endfor %}
            <hr>
            {% endfor %}
            </div>
</div>
<script>
	
	
        document.addEventListener("DOMContentLoaded", function() {
            // ボタン内のテキストを取得
            var buttons = document.querySelectorAll('.resident-btn');
            buttons.forEach(function(button) {
                var buttonText = button.innerText;
                // スペースごとに分割して新しい段落要素を作成
                var paragraphs = buttonText.split(/ +/).map(function(word) {
                    return '<p>' + word + '</p>';
                });
                // 新しい段落要素をボタンに挿入
                button.innerHTML = paragraphs.join('');
            });
        });
	
	function selectResident(compare,resident_id,name,number,room_num,status) {
	document.getElementById('create').style.display = 'none';
	document.getElementById('update_status').style.display = 'none';
	document.getElementById('submit_move').style.display = 'none';
        document.getElementById('move').style.display = 'none';
        document.getElementById('disappear').style.display = 'none';
	document.getElementById('name').style.display = 'none';
        document.getElementById('number').style.display = 'none';
        document.getElementById('status').style.display = 'none';
	document.getElementById('submit').style.display = 'none';
        document.getElementById('move_select').value = '';
        document.getElementById('move_select').style.display = 'none';
	
	document.getElementById('name').value = name
	document.getElementById('number').value = number
	document.getElementById('room_number').value = room_num
	document.getElementById('status').value = status
	document.getElementById('resident_id').value = resident_id
	console.log(document.getElementById('resident_id').value)
	console.log((document.getElementById('name').value))
	if(compare == 'exist') {
		document.getElementById('update_status').style.display = 'block';
	        document.getElementById('move').style.display = 'block';
	        document.getElementById('disappear').style.display = 'block';
	} else if(compare == 'not_exist') {
		document.getElementById('create').style.display = 'block';
	}
	}
	
	function createView() {
	document.getElementById('create').style.display = 'none';
	document.getElementById('update_status').style.display = 'none';
        document.getElementById('move').style.display = 'none';
        document.getElementById('disappear').style.display = 'none';
	document.getElementById('name').style.display = 'block';
	document.getElementById('number').style.display = 'none';
	document.getElementById('status').style.display = 'block';
	document.getElementById('submit').style.display = 'block';
	}	

	function updateResident() {
	if (document.getElementById('name').value == '' || document.getElementById('number').value == '' 
	|| document.getElementById('status').value == '') {
	alert('値を入力して下さい')
	return
	}
	var post_data = {
		post_status: 'update',
		resident_id: document.getElementById('resident_id').value,
		name:  document.getElementById('name').value,
		number: document.getElementById('number').value,
		room_number: document.getElementById('room_number').value,
		status: document.getElementById('status').value
            }
	    console.log(post_data)
            fetch('/setting_update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(post_data)
             });
	}
	
        function updateView() {
        document.getElementById('create').style.display = 'none';
        document.getElementById('update_status').style.display = 'none';
        document.getElementById('move').style.display = 'none';
        document.getElementById('disappear').style.display = 'none';
        document.getElementById('name').style.display = 'none';
        document.getElementById('number').style.display = 'none';
        document.getElementById('status').style.display = 'block';
        document.getElementById('submit').style.display = 'block';
	document.getElementById('move_select').value = '';
	document.getElementById('move_select').style.display = 'none';

        }

	function disappearResident() {
	var result = confirm(document.getElementById('name').value + "様を退去させますか？");
	
	var post_data = {
		post_status: 'disappear',
		resident_id: document.getElementById('resident_id').value,
		number: document.getElementById('number').value,
		room_number:  document.getElementById('room_number').value,
		status: document.getElementById('status').value
	}
	fetch('/setting_update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(post_data)
             });
	alert('更新しました')
	window.location.href = '/' + {{staff_id|tojson}} + '/setting';
	}
	
	function moveView() {
	document.getElementById('create').style.display = 'none';
        document.getElementById('update_status').style.display = 'none';
        document.getElementById('move').style.display = 'none';
        document.getElementById('disappear').style.display = 'none';
        document.getElementById('name').style.display = 'none';
        document.getElementById('number').style.display = 'none';
        document.getElementById('status').style.display = 'none';
	document.getElementById('move_select').style.display = 'block'
        document.getElementById('submit_move').style.display = 'block';
	}
	
	function moveResident() {
	var move_data_str = document.getElementById('move_select').value
	var move_data = document.getElementById('move_select').value.match(/\d+|'[^']*'|"[^"]*"/g).map(e => e.replace(/^['"]|['"]$/g, '').replace(/\\u3000/g, '　')).map(e => !isNaN(e) ? parseFloat(e) : e);

	console.log(move_data)
	console.log(move_data[1])

	var post_data = {
                post_status: 'move',
		resident_id: document.getElementById('resident_id').value,
		name: document.getElementById('name').value,
                number: document.getElementById('number').value,
                room_number:  document.getElementById('room_number').value,
                status: document.getElementById('status').value,
                move_id: move_data[0],
		move_name: move_data[1],
                move_number: move_data[2],
                move_room_number: move_data[3],
                move_status: move_data[4]
        }
        fetch('/setting_update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(post_data)
             });
        alert('更新しました')
        window.location.href = '/' + {{staff_id|tojson}} + '/setting';
	}

</script>
{% endblock %}
